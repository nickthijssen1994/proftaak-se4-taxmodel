«6
VD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Controllers\AccountController.cs
	namespace

 	
backend


 
.

 
Controllers

 
{ 
[ 
ApiController 
] 
[ 
Route 
( 
$str #
)# $
]$ %
public 
class 
AccountController 
:  !
ControllerBase" 0
{ 
private 	
PasswordHasher
 
hasher 
;  
private 	
readonly
 
IAccountService "
service# *
;* +
public 
AccountController	 
( 
IAccountService *
service+ 2
)2 3
{ 
hasher 	
=
 
new 
PasswordHasher 
( 
)  
;  !
this 
. 
service 
= 
service 
; 
} 
[ 
HttpGet 

]
 
public 
ActionResult	 
< 
IEnumerable !
<! "

AccountDto" ,
>, -
>- .
GetAccounts/ :
(: ;
); <
{ 
return 	
service
 
. 
GetAll 
( 
) 
. 
ToList !
(! "
)" #
;# $
} 
[!! 
AllowAnonymous!! 
]!! 
["" 
HttpPost"" 
("" 
$str"" 
)"" 
]"" 
public## 
IActionResult##	 
Login## 
(## 
LoginDto## %
loginDto##& .
)##. /
{$$ 
if%% 
(%% 
!%% 

ModelState%% 
.%% 
IsValid%% 
)%% 
{&& 
return'' 


BadRequest'' 
('' 
new'' 
	Exception'' #
(''# $
ResponseConstants''$ 5
.''5 6
InvalidInput''6 B
)''B C
)''C D
;''D E
}(( 
if** 
(** 
!** 
service** 
.** 
CheckNameExists** 
(**  
loginDto**  (
.**( )
Name**) -
)**- .
)**. /
{++ 
return,, 


BadRequest,, 
(,, 
new,, 
	Exception,, #
(,,# $
ResponseConstants,,$ 5
.,,5 6
InvalidCredentials,,6 H
),,H I
),,I J
;,,J K
}-- 
string// 	
hash//
 
=// 
service// 
.// 
	GetByName// "
(//" #
loginDto//# +
.//+ ,
Name//, 0
)//0 1
.//1 2
Password//2 :
;//: ;
if11 
(11 
!11 
VerifyPassword11 
(11 
loginDto11 
.11  
Password11  (
,11( )
hash11* .
)11. /
)11/ 0
{22 
return33 


BadRequest33 
(33 
new33 
	Exception33 #
(33# $
ResponseConstants33$ 5
.335 6
InvalidCredentials336 H
)33H I
)33I J
;33J K
}44 
return66 	
Ok66
 
(66 
service66 
.66 
Login66 
(66 
loginDto66 #
.66# $
Name66$ (
)66( )
)66) *
;66* +
}77 
[99 
AllowAnonymous99 
]99 
[:: 
HttpPost:: 
(:: 
$str:: 
):: 
]:: 
public;; 
IActionResult;;	 
Register;; 
(;;  
RegisterDto;;  +
registerDto;;, 7
);;7 8
{<< 
string== 	
password==
 
=== 
registerDto==  
.==  !
Password==! )
;==) *
if?? 
(?? 
!?? 

ModelState?? 
.?? 
IsValid?? 
)?? 
{@@ 
returnAA 


BadRequestAA 
(AA 
ResponseConstantsAA '
.AA' (
InvalidInputAA( 4
)AA4 5
;AA5 6
}BB 
ifDD 
(DD 
!DD 
passwordDD 
.DD 
AnyDD 
(DD 
charDD 
.DD 
IsDigitDD !
)DD! "
)DD" #
{EE 
returnFF 


BadRequestFF 
(FF 
newFF 
	ExceptionFF #
(FF# $
ResponseConstantsFF$ 5
.FF5 6!
PasswordMissingNumberFF6 K
)FFK L
)FFL M
;FFM N
}GG 
ifII 
(II 
!II 
passwordII 
.II 
AnyII 
(II 
charII 
.II 
IsUpperII !
)II! "
)II" #
{JJ 
returnKK 


BadRequestKK 
(KK 
newKK 
	ExceptionKK #
(KK# $
ResponseConstantsKK$ 5
.KK5 6"
PasswordMissingCapitalKK6 L
)KKL M
)KKM N
;KKN O
}LL 
ifNN 
(NN 
serviceNN 
.NN 
CheckNameExistsNN 
(NN 
registerDtoNN *
.NN* +
NameNN+ /
)NN/ 0
)NN0 1
{OO 
returnPP 


BadRequestPP 
(PP 
newPP 
	ExceptionPP #
(PP# $
ResponseConstantsPP$ 5
.PP5 6
UsernameTakenPP6 C
)PPC D
)PPD E
;PPE F
}QQ 
ifSS 
(SS 
serviceSS 
.SS 
CheckEmailExistsSS 
(SS  
registerDtoSS  +
.SS+ ,
EmailSS, 1
)SS1 2
)SS2 3
{TT 
returnUU 


BadRequestUU 
(UU 
errorUU 
:UU 
newUU  
	ExceptionUU! *
(UU* +
ResponseConstantsUU+ <
.UU< =

EmailTakenUU= G
)UUG H
)UUH I
;UUI J
}VV 
returnXX 	
OkXX
 
(XX 
serviceXX 
.XX 
RegisterXX 
(XX 
registerDtoXX )
)XX) *
)XX* +
;XX+ ,
}YY 
private[[ 	
bool[[
 
VerifyPassword[[ 
([[ 
string[[ $
input[[% *
,[[* +
string[[, 2
hash[[3 7
)[[7 8
{\\ 
return]] 	
hasher]]
 
.]] 

VerifyHash]] 
(]] 
input]] !
,]]! "
hash]]# '
)]]' (
;]]( )
}^^ 
}__ 
}`` áE
ZD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Controllers\AppointmentController.cs
	namespace 	
backend
 
. 
Controllers 
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str &
)& '
]' (
public 

class !
AppointmentController &
:' (
ControllerBase) 7
{ 
private 
readonly !
AppointmentRepository .
_repo/ 4
;4 5
private 
readonly 
IAppointmentService ,
_service- 5
;5 6
public !
AppointmentController $
($ %!
AppointmentRepository% :
repo; ?
,? @
IAppointmentServiceA T
serviceU \
)\ ]
{ 	
_repo 
= 
repo 
; 
_service 
= 
service 
; 
} 	
[ 	
HttpGet	 
] 
public 
ActionResult 
< 
IEnumerable '
<' (
AppointmentDto( 6
>6 7
>7 8
GetAppointments9 H
(H I
)I J
{ 	
return 
_service 
. 
GetAll "
(" #
)# $
.$ %
ToList% +
(+ ,
), -
;- .
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
ActionResult 
< 
AppointmentDto *
>* +
GetAppointmentById, >
(> ?
long? C
idD F
)F G
{   	
var!! 
appointment!! 
=!! 
_service!! &
.!!& '
GetById!!' .
(!!. /
id!!/ 1
)!!1 2
;!!2 3
if## 
(## 
appointment## 
==## 
null## #
)### $
return##% +
NotFound##, 4
(##4 5
)##5 6
;##6 7
return%% 
appointment%% 
;%% 
}&& 	
[)) 	
HttpGet))	 
()) 
$str))  
)))  !
]))! "
public** 
ActionResult** 
<** 
IEnumerable** '
<**' (
AppointmentDto**( 6
>**6 7
>**7 8%
GetAppointmentsInTimeSpan**9 R
(**R S)
AppointmentsWithinTimespanDto**S p
dto**q t
)**t u
{++ 	
if,, 
(,, 

ModelState,, 
.,, 
IsValid,, "
||,,# %
dto,,& )
==,,* ,
null,,- 1
||,,2 4
dto,,5 8
.,,8 9
EndTime,,9 @
<=,,A C
dto,,D G
.,,G H
	BeginTime,,H Q
),,Q R
return,,S Y

BadRequest,,Z d
(,,d e
),,e f
;,,f g
var.. 
appointments.. 
=.. 
_service.. '
...' (
GetWithinTimeSpan..( 9
(..9 :
dto..: =
)..= >
...> ?
ToList..? E
(..E F
)..F G
;..G H
if00 
(00 
appointments00 
==00 
null00  $
)00$ %
return11 

BadRequest11 !
(11! "
)11" #
;11# $
return22 
appointments22 
;22  
}33 	
[66 	
HttpPut66	 
(66 
$str66 
)66 
]66 
public77 
ActionResult77 
<77  
UpdateAppointmentDto77 0
>770 1
PutAppointment772 @
(77@ A
long77A E
id77F H
,77H I 
UpdateAppointmentDto77J ^
appointment77_ j
)77j k
{88 	
if99 
(99 
!99 

ModelState99 
.99 
IsValid99 #
||99$ &
appointment99' 2
==993 5
null996 :
||99; =
id99> @
!=99A C
appointment99D O
.99O P
Id99P R
)99R S
return99T Z

BadRequest99[ e
(99e f
)99f g
;99g h
_service;; 
.;; 
Update;; 
(;; 
appointment;; '
);;' (
;;;( )
return== 
appointment== 
;== 
}>> 	
[@@ 	
HttpPost@@	 
(@@ 
$str@@ 
)@@ 
]@@ 
publicAA 
ActionResultAA 
<AA %
RegisterForAppointmentDtoAA 5
>AA5 6"
RegisterForAppointmentAA7 M
(AAM N%
RegisterForAppointmentDtoAAN g
dtoAAh k
)AAk l
{BB 	
ifCC 
(CC 
!CC 

ModelStateCC 
.CC 
IsValidCC #
)CC# $
returnCC% +

BadRequestCC, 6
(CC6 7
)CC7 8
;CC8 9
_serviceEE 
.EE "
RegisterForAppointmentEE +
(EE+ ,
dtoEE, /
)EE/ 0
;EE0 1
returnGG 
dtoGG 
;GG 
}HH 	
[JJ 	
HttpPostJJ	 
]JJ 
publicKK 
ActionResultKK 
<KK  
CreateAppointmentDtoKK 0
>KK0 1
PostAppointmentKK2 A
(KKA B 
CreateAppointmentDtoKKB V
appointmentKKW b
)KKb c
{LL 	
ifMM 
(MM 
!MM 

ModelStateMM 
.MM 
IsValidMM #
)MM# $
returnMM% +

BadRequestMM, 6
(MM6 7
)MM7 8
;MM8 9
_serviceOO 
.OO 
CreateOO 
(OO 
appointmentOO '
)OO' (
;OO( )
returnQQ 
appointmentQQ 
;QQ 
}RR 	
[TT 	

HttpDeleteTT	 
(TT 
$strTT 
)TT 
]TT 
publicUU 
ActionResultUU 
<UU 
AppointmentDtoUU *
>UU* +
DeleteAppointmentUU, =
(UU= >
longUU> B
idUUC E
)UUE F
{VV 	
varWW 
appointmentWW 
=WW 
_serviceWW &
.WW& '
GetByIdWW' .
(WW. /
idWW/ 1
)WW1 2
;WW2 3
ifXX 
(XX 
appointmentXX 
==XX 
nullXX #
)XX# $
returnXX% +
NotFoundXX, 4
(XX4 5
)XX5 6
;XX6 7
_serviceZZ 
.ZZ 
DeleteZZ 
(ZZ 
appointmentZZ '
)ZZ' (
;ZZ( )
return\\ 
appointment\\ 
;\\ 
}]] 	
private__ 
bool__ 
AppointmentExists__ &
(__& '
long__' +
id__, .
)__. /
{`` 	
returnaa 
_repoaa 
.aa 
	SetEntityaa "
.aa" #
Anyaa# &
(aa& '
eaa' (
=>aa) +
eaa, -
.aa- .
Idaa. 0
==aa1 3
idaa4 6
)aa6 7
;aa7 8
}bb 	
[dd 	
HttpPostdd	 
(dd 
$strdd 
)dd  
]dd  !
publicee 
ActionResultee 
<ee %
RegisterForAppointmentDtoee 5
>ee5 6
Unsubscribeee7 B
(eeB C%
RegisterForAppointmentDtoeeC \
dtoee] `
)ee` a
{ff 	
ifgg 
(gg 
!gg 

ModelStategg 
.gg 
IsValidgg #
)gg# $
returngg% +

BadRequestgg, 6
(gg6 7
)gg7 8
;gg8 9
_serviceii 
.ii 
Unsubscribeii  
(ii  !
dtoii! $
)ii$ %
;ii% &
returnkk 
dtokk 
;kk 
}ll 	
[nn 	
HttpGetnn	 
(nn 
$strnn -
)nn- .
]nn. /
publicoo 
ActionResultoo	 
<oo 
booloo 
>oo &
IsRegisteredForAppointmentoo 6
(oo6 7%
RegisterForAppointmentDtooo7 P
dtoooQ T
)ooT U
{pp 
ifqq 
(qq 
!qq 

ModelStateqq 
.qq 
IsValidqq 
)qq 
{rr 
returnss 


BadRequestss 
(ss 
)ss 
;ss 
}tt 
returnvv 	
_servicevv
 
.vv &
IsRegisteredForAppointmentvv -
(vv- .
dtovv. 1
)vv1 2
;vv2 3
}ww 
}xx 
}yy ç
VD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Controllers\ExampleController.cs
	namespace 	
backend
 
. 
Controllers 
{ 
[		 
ApiController		 
]		 
[

 
Route

 
(

 
$str

 #
)

# $
]

$ %
public 
class 
ExampleController 
:  !
ControllerBase" 0
{ 
private 	
readonly
 
ExampleRepository $
_repo% *
;* +
public 
ExampleController	 
( 
ExampleRepository ,
repo- 1
)1 2
{ 
_repo 
=	 

repo 
; 
} 
[ 
HttpGet 

]
 
public 
ActionResult	 
< 
IEnumerable !
<! "
Example" )
>) *
>* +
GetAll, 2
(2 3
)3 4
{ 
return 	
_repo
 
. 
GetEntities 
< 
IEnumerable '
<' (
Example( /
>/ 0
>0 1
(1 2
null2 6
,6 7
null8 <
)< =
.= >
ToList> D
(D E
)E F
;F G
} 
[ 
HttpGet 

(
 
$str 
) 
] 
public 
ActionResult	 
< 
Example 
> 
Get "
(" #
int# &
id' )
)) *
{ 
return 	
_repo
 
. 
GetEntityById 
( 
id  
)  !
;! "
} 
[   
HttpPost   
]   
public!! 
ActionResult!!	 
<!! 
Example!! 
>!! 
Add!! "
(!!" #
Example!!# *
example!!+ 2
)!!2 3
{"" 
_repo## 
.## 	
InsertEntity##	 
(## 
example## 
)## 
;## 
_repo$$ 
.$$ 	
Save$$	 
($$ 
)$$ 
;$$ 
return%% 	
example%%
 
;%% 
}&& 
[(( 
HttpPut(( 

(((
 
$str(( 
)(( 
](( 
public)) 
ActionResult))	 
<)) 
Example)) 
>)) 
Update)) %
())% &
Example))& -
example)). 5
)))5 6
{** 
_repo++ 
.++ 	
UpdateEntity++	 
(++ 
example++ 
)++ 
;++ 
_repo,, 
.,, 	
Save,,	 
(,, 
),, 
;,, 
return-- 	
example--
 
;-- 
}.. 
[00 

HttpDelete00 
(00 
$str00 
)00 
]00 
public11 
ActionResult11	 
<11 
Example11 
>11 
Delete11 %
(11% &
int11& )
id11* ,
)11, -
{22 
var33 
example33 
=33 
_repo33 
.33 
GetEntityById33 $
(33$ %
id33% '
)33' (
;33( )
_repo44 
.44 	
DeleteEntity44	 
(44 
example44 
)44 
;44 
_repo55 
.55 	
Save55	 
(55 
)55 
;55 
return66 	
example66
 
;66 
}77 
}88 
}99 ç$
ID:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\DAL\MySqlContext.cs
	namespace 	
backend
 
. 
DAL 
{ 
public 
class 
MySqlContext 
: 
	DbContext &
{ 
public		 
MySqlContext			 
(		 
DbContextOptions		 &
<		& '
MySqlContext		' 3
>		3 4
options		5 <
)		< =
:		> ?
base		@ D
(		D E
options		E L
)		L M
{

 
Database 
. 
EnsureCreated 
( 
) 
; 
} 
public 
DbSet	 
< 
Account 
> 
Accounts  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet	 
< 
Appointment 
> 
Appointments (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
DbSet	 
< 
Order 
> 
Orders 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DbSet	 
< 
Example 
> 
Tests 
{ 
get  #
;# $
set% (
;( )
}* +
	protected 
override 
void 
OnModelCreating )
() *
ModelBuilder* 6
modelBuilder7 C
)C D
{ 
if 
( 
modelBuilder 
== 
null 
) 
throw "
new# &!
ArgumentNullException' <
(< =
nameof= C
(C D
modelBuilderD P
)P Q
)Q R
;R S
modelBuilder 
. 
Entity 
< 
Account 
> 
(  
)  !
.! "
ToTable" )
() *
$str* 3
)3 4
;4 5
modelBuilder 
. 
Entity 
< 
Appointment "
>" #
(# $
)$ %
.% &
ToTable& -
(- .
$str. ;
); <
;< =
modelBuilder 
. 
Entity 
< 
Order 
> 
( 
) 
.  
ToTable  '
(' (
$str( /
)/ 0
;0 1
modelBuilder 
. 
Entity 
< 
Example 
> 
(  
)  !
.! "
ToTable" )
() *
$str* 3
)3 4
;4 5
modelBuilder 
. 
Entity 
< 
AppointmentAccount )
>) *
(* +
)+ ,
., -
HasKey- 3
(3 4
a4 5
=>6 8
new9 <
{= >
a> ?
.? @
AppointmentId@ M
,M N
aO P
.P Q
	AccountIdQ Z
}Z [
)[ \
;\ ]
modelBuilder 
. 
Entity 
< 
AppointmentAccount )
>) *
(* +
)+ ,
. 
HasOne 
( 
x 
=> 
x 
. 
Appointment 
) 
.  
WithMany  (
(( )
y) *
=>+ -
y. /
./ 0
AccountsRegistered0 B
)B C
. 
HasForeignKey 
( 
y 
=> 
y 
. 
AppointmentId '
)' (
;( )
modelBuilder   
.   
Entity   
<   
AppointmentAccount   )
>  ) *
(  * +
)  + ,
.!! 
HasOne!! 
(!! 
x!! 
=>!! 
x!! 
.!! 
Account!! 
)!! 
.!! 
WithMany!! $
(!!$ %
y!!% &
=>!!' )
y!!* +
.!!+ ,
Appointments!!, 8
)!!8 9
."" 
HasForeignKey"" 
("" 
y"" 
=>"" 
y"" 
."" 
AppointmentId"" '
)""' (
;""( )
}## 
}$$ 
}%% ¡
[D:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\DAL\Repositories\AccountRepository.cs
	namespace 	
backend
 
. 
DAL 
. 
Repositories "
{ 
public 
class 
AccountRepository 
:  !
GenericRepository" 3
<3 4
Account4 ;
>; <
{ 
public 
AccountRepository	 
( 
MySqlContext '
context( /
)/ 0
:1 2
base3 7
(7 8
context8 ?
)? @
{ 
}		 
}

 
} ±
_D:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\DAL\Repositories\AppointmentRepository.cs
	namespace 	
backend
 
. 
DAL 
. 
Repositories "
{ 
public 
class !
AppointmentRepository #
:$ %
GenericRepository& 7
<7 8
Appointment8 C
>C D
{ 
public !
AppointmentRepository	 
( 
MySqlContext +
context, 3
)3 4
:5 6
base7 ;
(; <
context< C
)C D
{ 
}		 
}

 
} ¡
[D:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\DAL\Repositories\ExampleRepository.cs
	namespace 	
backend
 
. 
DAL 
. 
Repositories "
{ 
public 
class 
ExampleRepository 
:  !
GenericRepository" 3
<3 4
Example4 ;
>; <
{ 
public 
ExampleRepository	 
( 
MySqlContext '
context( /
)/ 0
:1 2
base3 7
(7 8
context8 ?
)? @
{ 
}		 
}

 
} â1
[D:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\DAL\Repositories\GenericRepository.cs
	namespace 	
backend
 
. 
DAL 
. 
Repositories "
{ 
public		 
class		 
GenericRepository		 
<		  
TEntity		  '
>		' (
:		) *
IRepository		+ 6
<		6 7
TEntity		7 >
>		> ?
where		@ E
TEntity		F M
:		N O
class		P U
{

 
private 	
readonly
 
MySqlContext 
_context  (
;( )
public 
GenericRepository	 
( 
MySqlContext '
context( /
)/ 0
{ 
_context 
= 
context 
?? 
throw 
new "!
ArgumentNullException# 8
(8 9
nameof9 ?
(? @
context@ G
)G H
)H I
;I J
	SetEntity 
= 
context 
. 
Set 
< 
TEntity "
>" #
(# $
)$ %
;% &
} 
public 
DbSet	 
< 
TEntity 
> 
	SetEntity !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
virtual	 
IEnumerable 
< 
TEntity $
>$ %
GetEntities& 1
<1 2
	TProperty2 ;
>; <
(< =
)= >
{ 

IQueryable 
< 
TEntity 
> 
query 
= 
	SetEntity (
;( )
return 	
query
 
. 
ToList 
( 
) 
; 
} 
public 
virtual	 
IEnumerable 
< 
TEntity $
>$ %
GetEntities& 1
<1 2
	TProperty2 ;
>; <
(< =

Expression 
< 
Func 
< 
TEntity 
, 
bool  
>  !
>! "
filter# )
=* +
null, 0
,0 1

Expression 
< 
Func 
< 
TEntity 
, 
	TProperty %
>% &
>& '
[' (
]( )
includes* 2
=3 4
null5 9
)9 :
{ 

IQueryable 
< 
TEntity 
> 
query 
= 
	SetEntity (
;( )
if!! 
(!! 
filter!! 
!=!! 
null!! 
)!! 
{"" 
query## 	
=##
 
query## 
.## 
Where## 
(## 
filter## 
)## 
;##  
}$$ 
if&& 
(&& 
includes&& 
!=&& 
null&& 
)&& 
{'' 
return(( 

includes(( 
.(( 
	Aggregate(( 
((( 
query(( #
,((# $
(((% &
current((& -
,((- .
include((/ 6
)((6 7
=>((8 :
current((; B
.((B C
Include((C J
(((J K
include((K R
)((R S
)((S T
;((T U
})) 
return++ 	
query++
 
.++ 
ToList++ 
(++ 
)++ 
;++ 
},, 
public.. 
virtual..	 
TEntity.. 
GetEntityById.. &
(..& '
object..' -
id... 0
)..0 1
{// 
return00 	
	SetEntity00
 
.00 
Find00 
(00 
id00 
)00 
;00 
}11 
public33 
virtual33	 
void33 
InsertEntity33 "
(33" #
TEntity33# *
entity33+ 1
)331 2
{44 
	SetEntity55 
.55 
Add55 
(55 
entity55 
)55 
;55 
}66 
public88 
virtual88	 
void88 
DeleteEntityById88 &
(88& '
object88' -
id88. 0
)880 1
{99 
var:: 
entityToDelete:: 
=:: 
	SetEntity:: !
.::! "
Find::" &
(::& '
id::' )
)::) *
;::* +
DeleteEntity;; 
(;; 
entityToDelete;; 
);; 
;;;  
}<< 
public>> 
virtual>>	 
void>> 
DeleteEntity>> "
(>>" #
TEntity>># *
entityToDelete>>+ 9
)>>9 :
{?? 
if@@ 
(@@ 
_context@@ 
.@@ 
Entry@@ 
(@@ 
entityToDelete@@ $
)@@$ %
.@@% &
State@@& +
==@@, .
EntityState@@/ :
.@@: ;
Detached@@; C
)@@C D
	SetEntity@@E N
.@@N O
Attach@@O U
(@@U V
entityToDelete@@V d
)@@d e
;@@e f
	SetEntityAA 
.AA 
RemoveAA 
(AA 
entityToDeleteAA "
)AA" #
;AA# $
}BB 
publicDD 
virtualDD	 
voidDD 
UpdateEntityDD "
(DD" #
TEntityDD# *
entityToUpdateDD+ 9
)DD9 :
{EE 
	SetEntityFF 
.FF 
AttachFF 
(FF 
entityToUpdateFF "
)FF" #
;FF# $
_contextGG 
.GG 
EntryGG 
(GG 
entityToUpdateGG  
)GG  !
.GG! "
StateGG" '
=GG( )
EntityStateGG* 5
.GG5 6
ModifiedGG6 >
;GG> ?
}HH 
publicJJ 
voidJJ	 
SaveJJ 
(JJ 
)JJ 
{KK 
_contextLL 
.LL 
SaveChangesLL 
(LL 
)LL 
;LL 
}MM 
}NN 
}OO 
UD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\DAL\Repositories\IRepository.cs
	namespace 	
backend
 
. 
DAL 
. 
Repositories "
{ 
public 
	interface 
IRepository 
< 
TEntity %
>% &
where' ,
TEntity- 4
:5 6
class7 <
{		 
DbSet

 
<

 
TEntity

 
>

 
	SetEntity

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
IEnumerable 
< 
TEntity 
> 
GetEntities "
<" #
	TProperty# ,
>, -
(- .

Expression 
< 
Func 
< 
TEntity 
, 
bool  
>  !
>! "
filter# )
=* +
null, 0
,0 1

Expression 
< 
Func 
< 
TEntity 
, 
	TProperty %
>% &
>& '
[' (
]( )
includes* 2
=3 4
null5 9
)9 :
;: ;
TEntity 	
GetEntityById
 
( 
object 
id !
)! "
;" #
void 
InsertEntity 
( 
TEntity 
entity "
)" #
;# $
void 
DeleteEntityById 
( 
object 
id !
)! "
;" #
void 
DeleteEntity 
( 
TEntity 
entityToDelete *
)* +
;+ ,
void 
UpdateEntity 
( 
TEntity 
entityToUpdate *
)* +
;+ ,
void 
Save 
( 
) 
; 
} 
} ®
LD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Helpers\AppSettings.cs
	namespace 	
backend
 
. 
Helpers 
{ 
public 
class 
AppSettings 
{ 
public 
string	 
Secret 
{ 
get 
; 
set !
;! "
}# $
} 
} ê
RD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Helpers\ResponseConstants.cs
	namespace 	
backend
 
. 
Helpers 
{ 
public 
static 
class 
ResponseConstants &
{ 
public 
const	 
string 
InvalidInput "
=# $
$str% 5
;5 6
public		 
const			 
string		 

EmailTaken		  
=		! "
$str		# B
;		B C
public

 
const

	 
string

 
UsernameTaken

 #
=

$ %
$str

& G
;

G H
public 
const	 
string "
PasswordMissingCapital ,
=- .
$str/ \
;\ ]
public 
const	 
string !
PasswordMissingNumber +
=, -
$str. Z
;Z [
public 
const	 
string 
InvalidCredentials (
=) *
$str+ P
;P Q
} 
} ß

GD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\Account.cs
	namespace 	
backend
 
. 
Models 
{ 
[ 
Table 
( 
$str 
) 
] 
public 
class 
Account 
{ 
public		 
long			 
Id		 
{		 
get		 
;		 
set		 
;		 
}		 
public

 
string

	 
Email

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string	 
Name 
{ 
get 
; 
set 
;  
}! "
public 
string	 
Password 
{ 
get 
; 
set  #
;# $
}% &
public 
ICollection	 
< 
AppointmentAccount '
>' (
Appointments) 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public 
ICollection	 
< 
Order 
> 
Orders "
{# $
get% (
;( )
}* +
} 
} º
KD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\Appointment.cs
	namespace 	
backend
 
. 
Models 
{ 
[ 
Table 
( 
$str 
) 
] 
public 
class 
Appointment 
{		 
public

 
long

	 
Id

 
{

 
get

 
;

 
set

 
;

 
}

 
public 
string	 
Title 
{ 
get 
; 
set  
;  !
}" #
public 
DateTime	 
	BeginTime 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime	 
EndTime 
{ 
get 
;  
set! $
;$ %
}& '
public 
string	 
Location 
{ 
get 
; 
set  #
;# $
}% &
public 
int	 
	MaxPeople 
{ 
get 
; 
set !
;! "
}# $
public 
int	 
	MinPeople 
{ 
get 
; 
set !
;! "
}# $
public 
Account	 
	Organiser 
{ 
get  
;  !
set" %
;% &
}' (
public 
ICollection	 
< 
Order 
> 
Orders "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
ICollection	 
< 
AppointmentAccount '
>' (
AccountsRegistered) ;
{< =
get> A
;A B
setC F
;F G
}H I
public 
string	 
Description 
{ 
get !
;! "
set# &
;& '
}( )
public 
string	 
Type 
{ 
get 
; 
set 
;  
}! "
} 
} û
RD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\AppointmentAccount.cs
	namespace 	
backend
 
. 
Models 
{ 
[ 
Table 
( 
$str 
) 
] 
public 
class 
AppointmentAccount  
{ 
public 
long	 
AppointmentId 
{ 
get !
;! "
set# &
;& '
}( )
public		 
Appointment			 
Appointment		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
public

 
long

	 
	AccountId

 
{

 
get

 
;

 
set

 "
;

" #
}

$ %
public 
Account	 
Account 
{ 
get 
; 
set  #
;# $
}% &
} 
} Å
XD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\Accounts\AccountDto.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
. 
Accounts &
{ 
public 
class 

AccountDto 
{ 
public 
long	 
Id 
{ 
get 
; 
set 
; 
} 
public 
string	 
Email 
{ 
get 
; 
set  
;  !
}" #
public 
string	 
Name 
{ 
get 
; 
set 
;  
}! "
public 
string	 
Password 
{ 
get 
; 
set  #
;# $
}% &
} 
} ¹
\D:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\Accounts\EditAccountDto.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
. 
Accounts &
{ 
public 
class 
EditAccountDto 
{ 
public 
string	 
Email 
{ 
get 
; 
set  
;  !
}" #
public 
string	 
Name 
{ 
get 
; 
set 
;  
}! "
public 
string	 
Password 
{ 
get 
; 
set  #
;# $
}% &
} 
}		 
VD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\Accounts\LoginDto.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
. 
Accounts &
{ 
public 
class 
LoginDto 
{ 
[ 
Required 
] 
public 
string 
Name 
{  !
get" %
;% &
set' *
;* +
}, -
[ 
Required 
] 
public 
string 
Password #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public		 
string			 
Token		 
{		 
get		 
;		 
set		  
;		  !
}		" #
}

 
} 
YD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\Accounts\RegisterDto.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
. 
Accounts &
{ 
public 
class 
RegisterDto 
{ 
[ 
Required 
] 
public 
string 
Email  
{! "
get# &
;& '
set( +
;+ ,
}- .
[

 
Required

 
]

 
[ 
	MinLength 
( 
$num 
, 
ErrorMessage 
= 
$str D
)D E
]E F
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
= 
$str  E
)E F
]F G
public 
string	 
Name 
{ 
get 
; 
set 
;  
}! "
[ 
Required 
] 
[ 
	MinLength 
( 
$num 
, 
ErrorMessage 
= 
$str H
)H I
]I J
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
= 
$str  I
)I J
]J K
public 
string	 
Password 
{ 
get 
; 
set  #
;# $
}% &
} 
} ø	
ZD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\Accounts\Registration.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
. 
Accounts &
{ 
public 
class 
Registration 
{ 
public 
string	 
Email 
{ 
get 
; 
set  
;  !
}" #
public 
string	 
Name 
{ 
get 
; 
set 
;  
}! "
public 
string	 
Token 
{ 
get 
; 
set  
;  !
}" #
public		 
Registration			 
(		 
string		 
email		 "
,		" #
string		$ *
name		+ /
,		/ 0
string		1 7
token		8 =
)		= >
{

 
Email 
=	 

email 
; 
Name 
= 	
name
 
; 
Token 
=	 

token 
; 
} 
} 
} 
YD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\AppointmentByWeekDto.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
{ 
public 
class )
AppointmentsWithinTimespanDto +
{ 
[ 
Required 
] 
public 
DateTime 
? 
	BeginTime '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
[		 
Required		 
]		 
public		 
DateTime		 
?		 
EndTime		 %
{		& '
get		( +
;		+ ,
set		- 0
;		0 1
}		2 3
}

 
} ¹
SD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\AppointmentDto.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
{ 
public 
class 
AppointmentDto 
{ 
public		 
long			 
Id		 
{		 
get		 
;		 
set		 
;		 
}		 
public

 
string

	 
Title

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
DateTime	 
? 
	BeginTime 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime	 
? 
EndTime 
{ 
get  
;  !
set" %
;% &
}' (
public 
string	 
Location 
{ 
get 
; 
set  #
;# $
}% &
public 
string	 
Type 
{ 
get 
; 
set 
;  
}! "
public 
int	 
	MaxPeople 
{ 
get 
; 
set !
;! "
}# $
public 
int	 
	MinPeople 
{ 
get 
; 
set !
;! "
}# $
public 
int	 
PeopleCount 
{ 
get 
; 
set  #
;# $
}% &
public 

AccountDto	 
	Organiser 
{ 
get  #
;# $
set% (
;( )
}* +
public 
ICollection	 
< 
Order 
> 
Orders "
{# $
get% (
;( )
}* +
public 
string	 
Description 
{ 
get !
;! "
set# &
;& '
}( )
} 
} É
YD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\CreateAppointmentDto.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
{ 
public 
class  
CreateAppointmentDto "
{ 
[ 
Required 
] 
[		 
	MaxLength		 
(		 
$num		 
,		 
ErrorMessage		 
=		 
$str		  F
)		F G
,		G H
	MinLength

 
(

 
$num

 
,

 
ErrorMessage

 
=

 
$str

 D
)

D E
]

E F
public 
string	 
Title 
{ 
get 
; 
set  
;  !
}" #
[ 
Required 
] 
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
= 
$str  I
)I J
,J K
	MinLength 
( 
$num 
, 
ErrorMessage 
= 
$str G
)G H
]H I
public 
string	 
Location 
{ 
get 
; 
set  #
;# $
}% &
[ 
Required 
] 
public 
DateTime 
? 
	BeginTime '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
[ 
Required 
] 
public 
DateTime 
? 
EndTime %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
[ 
Required 
] 
public 
int 
	MinPeople !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 
Required 
] 
public 
int 
	MaxPeople !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
=  
$str! N
)N O
]O P
public 
string	 
Description 
{ 
get !
;! "
set# &
;& '
}( )
public 
string	 
Type 
{ 
get 
; 
set 
;  
}! "
} 
} ð
^D:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\RegisterForAppointmentDto.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
{ 
public 
class %
RegisterForAppointmentDto '
{ 
[ 
Range 
( 	
$num	 

,
 
long 
. 
MaxValue 
, 
ErrorMessage '
=( )
$str* H
)H I
]I J
public 
long	 
	AccountId 
{ 
get 
; 
set "
;" #
}$ %
[

 
Range

 
(

 	
$num

	 

,


 
long

 
.

 
MaxValue

 
,

 
ErrorMessage

 '
=

( )
$str

* H
)

H I
]

I J
public 
long	 
AppointmentId 
{ 
get !
;! "
set# &
;& '
}( )
} 
} «
YD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\DTOs\UpdateAppointmentDto.cs
	namespace 	
backend
 
. 
Models 
. 
DTOs 
{ 
public 
class  
UpdateAppointmentDto "
{ 
public		 
long			 
Id		 
{		 
get		 
;		 
set		 
;		 
}		 
[ 
Required 
] 
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
= 
$str  F
)F G
,G H
	MinLength 
( 
$num 
, 
ErrorMessage 
= 
$str D
)D E
]E F
public 
string	 
Title 
{ 
get 
; 
set  
;  !
}" #
[ 
Required 
] 
public 
DateTime 
? 
	BeginTime '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
[ 
Required 
] 
public 
DateTime 
? 
EndTime %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
[ 
Required 
] 
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
= 
$str  I
)I J
,J K
	MinLength 
( 
$num 
, 
ErrorMessage 
= 
$str G
)G H
]H I
public 
string	 
Location 
{ 
get 
; 
set  #
;# $
}% &
[ 
Required 
] 
public 
int 
	MinPeople !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 
Required 
] 
public 
int 
	MaxPeople !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
Account	 
	Organiser 
{ 
get  
;  !
set" %
;% &
}' (
public 
ICollection	 
< 
Order 
> 
Orders "
{# $
get% (
;( )
}* +
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
=  
$str! N
)N O
]O P
public   
string  	 
Description   
{   
get   !
;  ! "
set  # &
;  & '
}  ( )
public"" 
string""	 
Type"" 
{"" 
get"" 
;"" 
set"" 
;""  
}""! "
}## 
}$$ 
GD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\Example.cs
	namespace 	
backend
 
. 
Models 
{ 
[ 
Table 
( 
$str 
) 
] 
public 
class 
Example 
{ 
public 
long	 
Id 
{ 
get 
; 
set 
; 
} 
public		 
string			 
Name		 
{		 
get		 
;		 
set		 
;		  
}		! "
}

 
} ö
HD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\JwtToken.cs
	namespace 	
backend
 
. 
Models 
{ 
public 
class 
JwtToken 
{ 
public 
string	 
Token 
{ 
get 
; 
set  
;  !
}" #
public 
JwtToken	 
( 
string 
token 
) 
{ 
Token		 
=			 

token		 
;		 
}

 
} 
} 
ZD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\Mapping\AutoMappingProfile.cs
	namespace 	
backend
 
. 
Models 
. 
Mapping  
{ 
public 
class 
AutoMappingProfile  
:! "
Profile# *
{ 
public		 
AutoMappingProfile			 
(		 
)		 
{

 
	CreateMap 
< 
Appointment 
, 
AppointmentDto (
>( )
() *
)* +
. 
	ForMember 
( 
a 
=> 
a 
. 
PeopleCount !
,! "
pc# %
=>& (
pc) +
.+ ,
MapFrom, 3
(3 4
a4 5
=>6 8
a9 :
.: ;
AccountsRegistered; M
.M N
CountN S
)S T
)T U
;U V
	CreateMap 
<  
CreateAppointmentDto !
,! "
Appointment# .
>. /
(/ 0
)0 1
;1 2
	CreateMap 
<  
UpdateAppointmentDto !
,! "
Appointment# .
>. /
(/ 0
)0 1
;1 2
	CreateMap 
< %
RegisterForAppointmentDto &
,& '
AppointmentAccount( :
>: ;
(; <
)< =
;= >
	CreateMap 
< 
Account 
, 

AccountDto  
>  !
(! "
)" #
;# $
	CreateMap 
< 
RegisterDto 
, 
Account !
>! "
(" #
)# $
;$ %
	CreateMap 
< 
LoginDto 
, 
Account 
> 
(  
)  !
;! "
} 
} 
} ý
ED:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Models\Order.cs
	namespace 	
backend
 
. 
Models 
{ 
[ 
Table 
( 
$str 
) 
] 
public 
class 
Order 
{ 
public		 
long			 
Id		 
{		 
get		 
;		 
set		 
;		 
}		 
[ 
Required 
] 
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
=  
$str! M
)M N
]N O
public 
string	 
Description 
{ 
get !
;! "
set# &
;& '
}( )
} 
} Ë

@D:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Program.cs
	namespace 	
backend
 
{ 
public 
static 
class 
Program 
{ 
public 
static	 
void 
Main 
( 
string  
[  !
]! "
args# '
)' (
{		 
CreateHostBuilder

 
(

 
args

 
)

 
.

 
Build

  
(

  !
)

! "
.

" #
Run

# &
(

& '
)

' (
;

( )
} 
public 
static	 
IHostBuilder 
CreateHostBuilder .
(. /
string/ 5
[5 6
]6 7
args8 <
)< =
{ 
return 	
Host
 
.  
CreateDefaultBuilder #
(# $
args$ (
)( )
. $
ConfigureWebHostDefaults 
( 

webBuilder (
=>) +
{, -

webBuilder. 8
.8 9

UseStartup9 C
<C D
StartupD K
>K L
(L M
)M N
;N O
}P Q
)Q R
;R S
} 
} 
} ¼
PD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Security\PasswordHasher.cs
	namespace 	
backend
 
. 
Helpers 
{ 
public

 
class

 
PasswordHasher

 
{ 
private 	
SHA256
 

sha256Hash 
= 
SHA256 $
.$ %
Create% +
(+ ,
), -
;- .
public 
string	 
GenerateHash 
( 
string #
input$ )
)) *
{ 
byte 
[ 
] 	
data
 
= 

sha256Hash 
. 
ComputeHash '
(' (
Encoding( 0
.0 1
UTF81 5
.5 6
GetBytes6 >
(> ?
input? D
)D E
)E F
;F G
var 
sBuilder 
= 
new 
StringBuilder #
(# $
)$ %
;% &
for 
( 
int 
i 
= 
$num 
; 
i 
< 
data 
. 
Length "
;" #
i$ %
++% '
)' (
{ 
sBuilder 
. 
Append 
( 
data 
[ 
i 
] 
. 
ToString $
($ %
$str% )
)) *
)* +
;+ ,
} 
return 	
sBuilder
 
. 
ToString 
( 
) 
; 
}   
public"" 
bool""	 

VerifyHash"" 
("" 
string"" 
input""  %
,""% &
string""' -
hash"". 2
)""2 3
{## 
var%% 
hashOfInput%% 
=%% 
GenerateHash%% !
(%%! "
input%%" '
)%%' (
;%%( )
StringComparer(( 
comparer(( 
=(( 
StringComparer(( +
.((+ ,
OrdinalIgnoreCase((, =
;((= >
return** 	
comparer**
 
.** 
Compare** 
(** 
hashOfInput** &
,**& '
hash**( ,
)**, -
==**. 0
$num**1 2
;**2 3
}++ 
},, 
}-- á
ND:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Security\TokenHandler.cs
	namespace		 	
backend		
 
.		 
Security		 
{

 
public 
class 
TokenHandler 
{ 
private 	#
JwtSecurityTokenHandler
 !
tokenHandler" .
;. /
private 	
byte
 
[ 
] 
key 
; 
private 	
readonly
 
AppSettings 
appSettings *
;* +
public 
TokenHandler	 
( 
IOptions 
< 
AppSettings *
>* +
appSettings, 7
)7 8
{ 
this 
. 
appSettings 
= 
appSettings !
.! "
Value" '
;' (
} 
public 
string	 
GenerateToken 
( 
string $
name% )
)) *
{ 
tokenHandler 
= 
new #
JwtSecurityTokenHandler -
(- .
). /
;/ 0
key 
= 
Encoding	 
. 
ASCII 
. 
GetBytes  
(  !
appSettings! ,
., -
Secret- 3
)3 4
;4 5#
SecurityTokenDescriptor 
tokenDescriptor *
=+ ,
new- 0#
SecurityTokenDescriptor1 H
{ 
Subject 
= 
new 
ClaimsIdentity  
(  !
new! $
Claim% *
[* +
]+ ,
{   
new!! 
Claim!!	 
(!! 

ClaimTypes!! 
.!! 
Name!! 
,!! 
name!!  $
)!!$ %
}"" 
)"" 
,"" 
Expires## 
=## 
DateTime## 
.## 
UtcNow## 
.## 
AddDays## %
(##% &
$num##& '
)##' (
,##( )
SigningCredentials$$ 
=$$ 
new$$ 
SigningCredentials$$ /
($$/ 0
new$$0 3 
SymmetricSecurityKey$$4 H
($$H I
key$$I L
)$$L M
,$$M N
SecurityAlgorithms%% 
.%% 
HmacSha256Signature%% +
)%%+ ,
}&& 
;&& 
SecurityToken(( 
securityToken(( 
=((  
tokenHandler((! -
.((- .
CreateToken((. 9
(((9 :
tokenDescriptor((: I
)((I J
;((J K
return)) 	
tokenHandler))
 
.)) 

WriteToken)) !
())! "
securityToken))" /
)))/ 0
;))0 1
}** 
}++ 
},, ?
PD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Services\AccountService.cs
	namespace 	
backend
 
. 
Services 
{ 
public 
class 
AccountService 
: 
IAccountService .
{ 
private 	
readonly
 
AccountRepository $

repository% /
;/ 0
private 	
readonly
 
IMapper 
mapper !
;! "
private 	
TokenHandler
 
tokenHandler #
;# $
public 
AccountService	 
( 
AccountRepository )

repository* 4
,4 5
IMapper6 =
mapper> D
,D E
IOptionsF N
<N O
AppSettingsO Z
>Z [
appSettings\ g
)g h
{ 
this 
. 
mapper 
= 
mapper 
; 
this 
. 

repository 
= 

repository 
;  
tokenHandler 
= 
new 
TokenHandler "
(" #
appSettings# .
). /
;/ 0
} 
public 

AccountDto	 
GetById 
( 
long  
id! #
)# $
{ 
Account 

account 
= 

repository 
.  
GetEntityById  -
(- .
id. 0
)0 1
;1 2
return 	
mapper
 
. 
Map 
< 

AccountDto 
>  
(  !
account! (
)( )
;) *
} 
public   

AccountDto  	 
	GetByName   
(   
string   $
name  % )
)  ) *
{!! 
Account"" 

account"" 
="" 

repository"" 
.""  
GetEntities""  +
<""+ ,
Account"", 3
>""3 4
(""4 5
a""5 6
=>""7 9
a"": ;
.""; <
Name""< @
==""A C
name""D H
)""H I
.""I J
Single""J P
(""P Q
)""Q R
;""R S
return## 	
mapper##
 
.## 
Map## 
<## 

AccountDto## 
>##  
(##  !
account##! (
)##( )
;##) *
}$$ 
public&& 
bool&&	 
CheckNameExists&& 
(&& 
string&& $
name&&% )
)&&) *
{'' 
try(( 
{)) 
Account** 
account** 
=** 

repository**  
.**  !
GetEntities**! ,
<**, -
Account**- 4
>**4 5
(**5 6
a**6 7
=>**8 :
a**; <
.**< =
Name**= A
==**B D
name**E I
)**I J
.**J K
Single**K Q
(**Q R
)**R S
;**S T
return++ 

true++ 
;++ 
},, 
catch-- 
{.. 
return// 

false// 
;// 
}00 
}11 
public33 
bool33	 
CheckEmailExists33 
(33 
string33 %
email33& +
)33+ ,
{44 
try55 
{66 
Account77 
account77 
=77 

repository77  
.77  !
GetEntities77! ,
<77, -
Account77- 4
>774 5
(775 6
a776 7
=>778 :
a77; <
.77< =
Email77= B
==77C E
email77F K
)77K L
.77L M
Single77M S
(77S T
)77T U
;77U V
return88 

true88 
;88 
}99 
catch:: 
{;; 
return<< 

false<< 
;<< 
}== 
}>> 
public@@ 
Registration@@	 
Register@@ 
(@@ 
RegisterDto@@ *
registerDto@@+ 6
)@@6 7
{AA 
stringCC 	
tokenCC
 
=CC 
tokenHandlerCC 
.CC 
GenerateTokenCC ,
(CC, -
registerDtoCC- 8
.CC8 9
NameCC9 =
)CC= >
;CC> ?
PasswordHasherEE 
hasherEE 
=EE 
newEE 
PasswordHasherEE -
(EE- .
)EE. /
;EE/ 0
registerDtoFF 
.FF 
PasswordFF 
=FF 
hasherFF  
.FF  !
GenerateHashFF! -
(FF- .
registerDtoFF. 9
.FF9 :
PasswordFF: B
)FFB C
;FFC D
AccountII 

accountII 
=II 
mapperII 
.II 
MapII 
<II  
AccountII  '
>II' (
(II( )
registerDtoII) 4
)II4 5
;II5 6

repositoryJJ 
.JJ 
InsertEntityJJ 
(JJ 
accountJJ "
)JJ" #
;JJ# $

repositoryKK 
.KK 
SaveKK 
(KK 
)KK 
;KK 
returnMM 	
newMM
 
RegistrationMM 
(MM 
registerDtoMM &
.MM& '
EmailMM' ,
,MM, -
registerDtoMM. 9
.MM9 :
NameMM: >
,MM> ?
tokenMM@ E
)MME F
;MMF G
}NN 
publicPP 
JwtTokenPP	 
LoginPP 
(PP 
stringPP 
namePP #
)PP# $
{QQ 
returnSS 	
newSS
 
JwtTokenSS 
(SS 
tokenHandlerSS #
.SS# $
GenerateTokenSS$ 1
(SS1 2
nameSS2 6
)SS6 7
)SS7 8
;SS8 9
}TT 
publicVV 
voidVV	 
DeleteVV 
(VV 

AccountDtoVV 
dtoVV  #
)VV# $
{WW 
AccountXX 

accountXX 
=XX 
mapperXX 
.XX 
MapXX 
<XX  
AccountXX  '
>XX' (
(XX( )
dtoXX) ,
)XX, -
;XX- .

repositoryYY 
.YY 
DeleteEntityYY 
(YY 
accountYY "
)YY" #
;YY# $

repositoryZZ 
.ZZ 
SaveZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 
public]] 
IEnumerable]]	 
<]] 

AccountDto]] 
>]]  
GetAll]]! '
(]]' (
)]]( )
{^^ 
IEnumerable__ 
<__ 
Account__ 
>__ 
accounts__  
=__! "

repository__# -
.__- .
GetEntities__. 9
<__9 :
Account__: A
>__A B
(__B C
)__C D
;__D E
return`` 	
mapper``
 
.`` 
Map`` 
<`` 
IEnumerable``  
<``  !

AccountDto``! +
>``+ ,
>``, -
(``- .
accounts``. 6
)``6 7
;``7 8
}aa 
publiccc 
EditAccountDtocc	 
Updatecc 
(cc 
EditAccountDtocc -
editAccountDtocc. <
)cc< =
{dd 
Accountee 

accountee 
=ee 
mapperee 
.ee 
Mapee 
<ee  
Accountee  '
>ee' (
(ee( )
editAccountDtoee) 7
)ee7 8
;ee8 9

repositoryff 
.ff 
UpdateEntityff 
(ff 
accountff "
)ff" #
;ff# $

repositorygg 
.gg 
Savegg 
(gg 
)gg 
;gg 
returnhh 	
editAccountDtohh
 
;hh 
}ii 
}jj 
}kk îP
TD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Services\AppointmentService.cs
	namespace

 	
backend


 
.

 
Services

 
{ 
public 
class 
AppointmentService  
:! "
IAppointmentService# 6
{ 
private 	
readonly
 !
AppointmentRepository (
_repo) .
;. /
private 	
readonly
 
IMapper 
_mapper "
;" #
static 

Expression	 
< 
Func 
< 
Appointment $
,$ %
object& ,
>, -
>- .
[. /
]/ 0
includes1 9
=: ;
new< ?

Expression@ J
<J K
FuncK O
<O P
AppointmentP [
,[ \
object] c
>c d
>d e
[e f
]f g
{ 
a 
=> 
a 	
.	 

AccountsRegistered
 
, 
o 
=> 
o 	
.	 

	Organiser
 
} 
; 
public 
AppointmentService	 
( !
AppointmentRepository 1
repo2 6
,6 7
IMapper8 ?
mapper@ F
)F G
{ 
_mapper 

= 
mapper 
; 
_repo 
=	 

repo 
; 
} 
public 
AppointmentDto	 
GetById 
(  
long  $
id% '
)' (
{ 
Appointment   
appointment   
=   
_repo   "
.  " #
GetEntities  # .
(  . /
x  / 0
=>  1 3
x  4 5
.  5 6
Id  6 8
==  9 ;
id  < >
,  > ?
includes  @ H
)  H I
.  I J
FirstOrDefault  J X
(  X Y
)  Y Z
;  Z [
return!! 	
_mapper!!
 
.!! 
Map!! 
<!! 
AppointmentDto!! $
>!!$ %
(!!% &
appointment!!& 1
)!!1 2
;!!2 3
}"" 
public$$ 
IEnumerable$$	 
<$$ 
AppointmentDto$$ #
>$$# $
GetAll$$% +
($$+ ,
)$$, -
{%% 
IEnumerable&& 
<&& 
Appointment&& 
>&& 
appointments&& (
=&&) *
_repo&&+ 0
.&&0 1
GetEntities&&1 <
(&&< =
includes&&= E
:&&E F
includes&&G O
)&&O P
;&&P Q
return(( 	
_mapper((
 
.(( 
Map(( 
<(( 
IEnumerable(( !
<((! "
AppointmentDto((" 0
>((0 1
>((1 2
(((2 3
appointments((3 ?
)((? @
;((@ A
})) 
public++ 
IEnumerable++	 
<++ 
AppointmentDto++ #
>++# $
GetWithinTimeSpan++% 6
(++6 7)
AppointmentsWithinTimespanDto++7 T
dto++U X
)++X Y
{,, 
List-- 
<-- 
Appointment-- 
>-- 
appointments-- !
=--" #
_repo--$ )
.--) *
GetEntities--* 5
<--5 6
Appointment--6 A
>--A B
(--B C
a.. 
=>.. 
a..	 

...
 
	BeginTime.. 
>=.. 
dto.. 
... 
	BeginTime.. %
&&..& (
a..) *
...* +
EndTime..+ 2
<=..3 5
dto..6 9
...9 :
EndTime..: A
)// 
.// 
ToList// 
(// 
)// 
;// 
return11 	
_mapper11
 
.11 
Map11 
<11 
IEnumerable11 !
<11! "
AppointmentDto11" 0
>110 1
>111 2
(112 3
appointments113 ?
)11? @
;11@ A
}22 
public44 
bool44	 "
RegisterForAppointment44 $
(44$ %%
RegisterForAppointmentDto44% >
dto44? B
)44B C
{55 
Appointment66 
appointment66 
=66 
_repo66 "
.66" #
GetEntities66# .
(66. /
x66/ 0
=>661 3
x664 5
.665 6
Id666 8
==669 ;
dto66< ?
.66? @
AppointmentId66@ M
,66M N
includes66O W
)66W X
.66X Y
FirstOrDefault66Y g
(66g h
)66h i
;66i j
AppointmentAccount88 
aa88 
=88 
_mapper88 "
.88" #
Map88# &
<88& '
AppointmentAccount88' 9
>889 :
(88: ;
dto88; >
)88> ?
;88? @
if:: 
(:: &
IsRegisteredForAppointment:: !
(::! "
dto::" %
)::% &
||::' )
appointment::* 5
==::6 8
null::9 =
||::> @
appointment;; 
.;; 
AccountsRegistered;; %
.;;% &
Count;;& +
+;;, -
$num;;. /
>;;0 1
appointment;;2 =
.;;= >
	MaxPeople;;> G
);;G H
{<< 
return== 

false== 
;== 
}>> 
else?? 
{@@ 
appointmentAA 
.AA 
AccountsRegisteredAA "
.AA" #
AddAA# &
(AA& '
aaAA' )
)AA) *
;AA* +
_repoCC 	
.CC	 

UpdateEntityCC
 
(CC 
appointmentCC "
)CC" #
;CC# $
_repoDD 	
.DD	 

SaveDD
 
(DD 
)DD 
;DD 
returnEE 

trueEE 
;EE 
}FF 
}GG 
publicII 
voidII	 
CreateII 
(II  
CreateAppointmentDtoII )
dtoII* -
)II- .
{JJ 
AppointmentKK 
appointmentKK 
=KK 
_mapperKK $
.KK$ %
MapKK% (
<KK( )
AppointmentKK) 4
>KK4 5
(KK5 6
dtoKK6 9
)KK9 :
;KK: ;
_repoLL 
.LL 	
InsertEntityLL	 
(LL 
appointmentLL !
)LL! "
;LL" #
_repoMM 
.MM 	
SaveMM	 
(MM 
)MM 
;MM 
}NN 
publicPP 
voidPP	 
UpdatePP 
(PP  
UpdateAppointmentDtoPP )
dtoPP* -
)PP- .
{QQ 
AppointmentRR 
appointmentRR 
=RR 
_mapperRR $
.RR$ %
MapRR% (
<RR( )
AppointmentRR) 4
>RR4 5
(RR5 6
dtoRR6 9
)RR9 :
;RR: ;
_repoSS 
.SS 	
UpdateEntitySS	 
(SS 
appointmentSS !
)SS! "
;SS" #
_repoTT 
.TT 	
SaveTT	 
(TT 
)TT 
;TT 
}UU 
publicWW 
voidWW	 
DeleteWW 
(WW 
AppointmentDtoWW #
dtoWW$ '
)WW' (
{XX 
AppointmentYY 
appointmentYY 
=YY 
_mapperYY $
.YY$ %
MapYY% (
<YY( )
AppointmentYY) 4
>YY4 5
(YY5 6
dtoYY6 9
)YY9 :
;YY: ;
_repoZZ 
.ZZ 	
DeleteEntityZZ	 
(ZZ 
appointmentZZ !
)ZZ! "
;ZZ" #
_repo[[ 
.[[ 	
Save[[	 
([[ 
)[[ 
;[[ 
}\\ 
public^^ 
void^^	 
Unsubscribe^^ 
(^^ %
RegisterForAppointmentDto^^ 3
dto^^4 7
)^^7 8
{__ 
Appointment`` 
appointment`` 
=`` 
_repo`` "
.``" #
GetEntities``# .
(``. /
x``/ 0
=>``1 3
x``4 5
.``5 6
Id``6 8
==``9 ;
dto``< ?
.``? @
AppointmentId``@ M
,``M N
includes``O W
)``W X
.``X Y
FirstOrDefault``Y g
(``g h
)``h i
;``i j
appointmentbb 
.bb 
AccountsRegisteredbb !
.bb! "
Removebb" (
(bb( )
appointmentbb) 4
.bb4 5
AccountsRegisteredbb5 G
.bbG H
FirstOrDefaultbbH V
(bbV W
xcc 
=>cc 
xcc	 

.cc
 
	AccountIdcc 
==cc 
dtocc 
.cc 
	AccountIdcc %
&&cc& (
xcc) *
.cc* +
AppointmentIdcc+ 8
==cc9 ;
dtocc< ?
.cc? @
AppointmentIdcc@ M
)dd 
)dd 
;dd 
_repoff 
.ff 	
UpdateEntityff	 
(ff 
appointmentff !
)ff! "
;ff" #
_repogg 
.gg 	
Savegg	 
(gg 
)gg 
;gg 
}hh 
publicjj 
booljj	 &
IsRegisteredForAppointmentjj (
(jj( )%
RegisterForAppointmentDtojj) B
dtojjC F
)jjF G
{kk 
Appointmentll 
accountll 
=ll 
_repoll 
.ll 
GetEntityByIdll ,
(ll, -
dtoll- 0
.ll0 1
AppointmentIdll1 >
)ll> ?
;ll? @
ifnn 
(nn 
accountnn 
==nn 
nullnn 
)nn 
{oo 
returnpp 

falsepp 
;pp 
}qq 
returnss 	
accountss
 
.ss 
AccountsRegisteredss $
.ss$ %
Anyss% (
(ss( )
ass) *
=>ss+ -
ass. /
.ss/ 0
	AccountIdss0 9
==ss: <
dtoss= @
.ss@ A
	AccountIdssA J
)ssJ K
;ssK L
}tt 
}uu 
}vv Ù
QD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Services\IAccountService.cs
	namespace 	
backend
 
. 
Services 
{ 
public 
	interface 
IAccountService !
{ 

AccountDto		 
GetById		 
(		 
long		 
id		 
)		 
;		 

AccountDto

 
	GetByName

 
(

 
string

 
name

 "
)

" #
;

# $
bool 
CheckNameExists 
( 
string 
name "
)" #
;# $
bool 
CheckEmailExists 
( 
string 
email $
)$ %
;% &
IEnumerable 
< 

AccountDto 
> 
GetAll  
(  !
)! "
;" #
Registration 
Register 
( 
RegisterDto #
registerDto$ /
)/ 0
;0 1
JwtToken 

Login 
( 
string 
name 
) 
; 
EditAccountDto 
Update 
( 
EditAccountDto &
editAccountDto' 5
)5 6
;6 7
void 
Delete 
( 

AccountDto 

accountDto #
)# $
;$ %
} 
} ï
UD:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Services\IAppointmentService.cs
	namespace 	
backend
 
. 
Services 
{ 
public 
	interface 
IAppointmentService %
{ 
AppointmentDto 
GetById 
( 
long 
id  
)  !
;! "
IEnumerable		 
<		 
AppointmentDto		 
>		 
GetAll		 $
(		$ %
)		% &
;		& '
IEnumerable

 
<

 
AppointmentDto

 
>

 
GetWithinTimeSpan

 /
(

/ 0)
AppointmentsWithinTimespanDto

0 M
dto

N Q
)

Q R
;

R S
bool &
IsRegisteredForAppointment !
(! "%
RegisterForAppointmentDto" ;
dto< ?
)? @
;@ A
bool "
RegisterForAppointment 
( %
RegisterForAppointmentDto 7
dto8 ;
); <
;< =
void 
Unsubscribe 
( %
RegisterForAppointmentDto ,
dto- 0
)0 1
;1 2
void 
Create 
(  
CreateAppointmentDto "
dto# &
)& '
;' (
void 
Update 
(  
UpdateAppointmentDto "
dto# &
)& '
;' (
void 
Delete 
( 
AppointmentDto 
dto  
)  !
;! "
} 
} ÔC
@D:\Files\Delta\Proftaak\proftaak-se4-taxmodel\backend\Startup.cs
	namespace 	
backend
 
{ 
public 
class 
Startup 
{ 
readonly 

string "
MyAllowSpecificOrigins (
=) *
$str+ D
;D E
public 
Startup	 
( 
IConfiguration 
configuration  -
)- .
{ 
Configuration 
= 
configuration  
;  !
} 
public 
IConfiguration	 
Configuration %
{& '
get( +
;+ ,
}- .
public!! 
void!!	 
ConfigureServices!! 
(!!  
IServiceCollection!!  2
services!!3 ;
)!!; <
{"" 
services## 
.## 
AddCors## 
(## 
options## 
=>## 
{$$ 
options%% 
.%% 
	AddPolicy%% 
(%% 
name%% 
:%% "
MyAllowSpecificOrigins%% 2
,%%2 3
builder&& 
=>&& 
{'' 
builder(( 
.(( 
WithOrigins(( 
((( 
$str(( 
)(( 
.(( 
AllowAnyHeader(( -
(((- .
)((. /
.)) 
AllowAnyMethod)) 
()) 
))) 
;)) 
}** 
)** 
;** 
}++ 
)++ 
;++ 
if-- 
(-- 
Environment-- 
.-- "
GetEnvironmentVariable-- )
(--) *
$str--* B
)--B C
==--D F
$str--G S
)--S T
services.. 
... 
AddDbContext.. 
<.. 
MySqlContext.. &
>..& '
(..' (
options..( /
=>..0 2
{// 
options00 
.00 
UseMySql00 
(00 
Configuration00 #
.00# $
GetConnectionString00$ 7
(007 8
$str008 V
)00V W
)00W X
;00X Y
options11 
.11 
UseLoggerFactory11 
(11 
LoggerFactory11 +
.11+ ,
Create11, 2
(112 3
builder113 :
=>11; =
{11> ?
builder11@ G
.11G H

AddConsole11H R
(11R S
)11S T
;11T U
}11V W
)11W X
)11X Y
;11Y Z
}22 
)22 
;22 
else33 
if33 

(33 
Environment33 
.33 "
GetEnvironmentVariable33 .
(33. /
$str33/ G
)33G H
==33I K
$str33L Y
)33Y Z
services44 
.44 
AddDbContext44 
<44 
MySqlContext44 &
>44& '
(44' (
options44( /
=>440 2
{55 
options66 
.66 
UseInMemoryDatabase66  
(66  !
$str66! 3
)663 4
;664 5
options77 
.77 
UseLoggerFactory77 
(77 
LoggerFactory77 +
.77+ ,
Create77, 2
(772 3
builder773 :
=>77; =
{77> ?
builder77@ G
.77G H

AddConsole77H R
(77R S
)77S T
;77T U
}77V W
)77W X
)77X Y
;77Y Z
}88 
)88 
;88 
services:: 
.:: 
AddAutoMapper:: 
(:: 
config::  
=>::! #
config::$ *
.::* +

AddProfile::+ 5
<::5 6
AutoMappingProfile::6 H
>::H I
(::I J
)::J K
,::K L
typeof::M S
(::S T
Startup::T [
)::[ \
)::\ ]
;::] ^
services;; 
.;; 
AddTransient;; 
<;; 
ExampleRepository;; *
>;;* +
(;;+ ,
);;, -
;;;- .
services<< 
.<< 
AddTransient<< 
<<< 
IAppointmentService<< ,
,<<, -
AppointmentService<<. @
><<@ A
(<<A B
)<<B C
;<<C D
services== 
.== 
AddTransient== 
<== !
AppointmentRepository== .
>==. /
(==/ 0
)==0 1
;==1 2
services?? 
.?? 
AddTransient?? 
<?? 
IAccountService?? (
,??( )
AccountService??* 8
>??8 9
(??9 :
)??: ;
;??; <
services@@ 
.@@ 
AddTransient@@ 
<@@ 
AccountRepository@@ *
>@@* +
(@@+ ,
)@@, -
;@@- .
servicesAA 
.AA 
AddControllersAA 
(AA 
)AA 
;AA 
varGG 
appSettingsSectionGG 
=GG 
ConfigurationGG )
.GG) *

GetSectionGG* 4
(GG4 5
$strGG5 ;
)GG; <
;GG< =
servicesHH 
.HH 
	ConfigureHH 
<HH 
AppSettingsHH !
>HH! "
(HH" #
appSettingsSectionHH# 5
)HH5 6
;HH6 7
varKK 
appSettingsKK 
=KK 
appSettingsSectionKK '
.KK' (
GetKK( +
<KK+ ,
AppSettingsKK, 7
>KK7 8
(KK8 9
)KK9 :
;KK: ;
varLL 
keyLL 

=LL 
EncodingLL 
.LL 
ASCIILL 
.LL 
GetBytesLL $
(LL$ %
appSettingsLL% 0
.LL0 1
SecretLL1 7
)LL7 8
;LL8 9
servicesMM 
.MM 
AddAuthenticationMM 
(MM 
xMM 
=>MM  "
{NN 
xOO 
.OO %
DefaultAuthenticateSchemeOO  
=OO! "
JwtBearerDefaultsOO# 4
.OO4 5 
AuthenticationSchemeOO5 I
;OOI J
xPP 
.PP "
DefaultChallengeSchemePP 
=PP 
JwtBearerDefaultsPP  1
.PP1 2 
AuthenticationSchemePP2 F
;PPF G
}QQ 
)QQ 
.RR 
AddJwtBearerRR 
(RR 
xRR 
=>RR 
{SS 
xTT 
.TT  
RequireHttpsMetadataTT 
=TT 
falseTT #
;TT# $
xUU 
.UU 
	SaveTokenUU 
=UU 
trueUU 
;UU 
xVV 
.VV %
TokenValidationParametersVV  
=VV! "
newVV# &%
TokenValidationParametersVV' @
{WW $
ValidateIssuerSigningKeyXX 
=XX  
trueXX! %
,XX% &
IssuerSigningKeyYY 
=YY 
newYY  
SymmetricSecurityKeyYY 1
(YY1 2
keyYY2 5
)YY5 6
,YY6 7
ValidateIssuerZZ 
=ZZ 
falseZZ 
,ZZ 
ValidateAudience[[ 
=[[ 
false[[ 
}\\ 
;\\ 
}]] 
)]] 
;]] 
}^^ 
publicaa 
voidaa	 
	Configureaa 
(aa 
IApplicationBuilderaa +
appaa, /
,aa/ 0
IWebHostEnvironmentaa1 D
envaaE H
)aaH I
{bb 
ifcc 
(cc 
envcc 

.cc
 
IsDevelopmentcc 
(cc 
)cc 
)cc 
appcc 
.cc  %
UseDeveloperExceptionPagecc  9
(cc9 :
)cc: ;
;cc; <
appee 
.ee 
UseCorsee 
(ee "
MyAllowSpecificOriginsee %
)ee% &
;ee& '
appgg 
.gg 
UseHttpsRedirectiongg 
(gg 
)gg 
;gg 
appii 
.ii 

UseRoutingii 
(ii 
)ii 
;ii 
appkk 
.kk 
UseAuthenticationkk 
(kk 
)kk 
;kk 
appmm 
.mm 
UseAuthorizationmm 
(mm 
)mm 
;mm 
appoo 
.oo 
UseEndpointsoo 
(oo 
	endpointsoo 
=>oo  
{oo! "
	endpointsoo# ,
.oo, -
MapControllersoo- ;
(oo; <
)oo< =
;oo= >
}oo? @
)oo@ A
;ooA B
}pp 
}qq 
}rr 